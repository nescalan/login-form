{"version":3,"sources":["CreateAccount/CreateAccount.js","SignIn/SignIn.js","Login/Login.js","App/App.js","index.js"],"names":["CreateAccount","useForm","register","handleSubmit","errors","formState","className","onSubmit","data","event","console","log","alert","target","reset","href","type","placeholder","required","name","pattern","value","message","email","minLength","password","role","SignIn","Login","useState","btnState","setBtnState","signUpButton","id","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f72dead0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CreateAccount() {\n  // REACT HOOK FORM VALIDATION\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  // HANDLE ONSUBMIT\n  const onSubmit = (data, event) => {\n    console.log(data);\n    alert(\"Account Created\");\n\n    // Clean Input Fields\n    event.target.reset();\n  };\n\n  return (\n    <>\n      <div className=\"form-container sign-up-container\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {/* CREATE ACOOUNT */}\n          <h1>Create Account</h1>\n          <div className=\"social-container\">\n            <a href=\"#\" className=\"social\">\n              <i className=\"fab fa-facebook-f\"></i>\n            </a>\n            <a href=\"#\" className=\"social\">\n              <i className=\"fab fa-google-plus-g\"></i>\n            </a>\n            <a href=\"#\" className=\"social\">\n              <i className=\"fab fa-linkedin-in\"></i>\n            </a>\n          </div>\n          <span>or use your email for registration</span>\n\n          {/*  NAME */}\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            {...register(\"name\", { required: true })}\n          />\n          {/* errors will return when field validation fails  */}\n          {errors.name && <span> This field is required</span>}\n\n          {/* EMAIL */}\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            {...register(\"email\", {\n              required: \"Email is required\",\n              pattern: {\n                value:\n                  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"Please enter a valid email\",\n              },\n            })}\n          />\n          {/* errors will return when field validation fails  */}\n          {errors.email && <span> This field is required</span>}\n\n          {/* PASSWORD */}\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            {...register(\"password\", {\n              required: \"required\",\n              minLength: {\n                value: 8,\n                message: \"min length is 8\",\n              },\n            })}\n          />\n          {errors.password && (\n            <span role=\"alert\">{errors.password.message}</span>\n          )}\n\n          <button type=\"submit\">Sign Up</button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport { CreateAccount };\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction SignIn() {\n  // REACT HOOK FORM VALIDATION\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  // HANDLE ONSUBMIT\n  const onSubmit = (data, event) => {\n    console.log(data);\n    alert(\"You are logged\");\n\n    // Clean Input Fields\n    event.target.reset();\n  };\n\n  return (\n    <>\n      <div className=\"form-container sign-in-container\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <h1>Sign in</h1>\n          <div className=\"social-container\">\n            <a href=\"#\" className=\"social\">\n              <i className=\"fab fa-facebook-f\"></i>\n            </a>\n            <a href=\"#\" className=\"social\">\n              <i className=\"fab fa-google-plus-g\"></i>\n            </a>\n            <a href=\"#\" className=\"social\">\n              <i className=\"fab fa-linkedin-in\"></i>\n            </a>\n          </div>\n          <span>or use your account</span>\n\n          {/* EMAIL */}\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            {...register(\"email\", {\n              required: \"Email is required\",\n              pattern: {\n                value:\n                  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"Please enter a valid email\",\n              },\n            })}\n          />\n          {/* errors will return when field validation fails  */}\n          {errors.email && <span> This field is required</span>}\n\n          {/* PASSWORD */}\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            {...register(\"password\", {\n              required: \"Insert a value password\",\n              minLength: {\n                value: 8,\n                message: \"min length is 8\",\n              },\n            })}\n          />\n          {errors.password && (\n            <span role=\"alert\">{errors.password.message}</span>\n          )}\n          <a href=\"#\">Forgot your password?</a>\n          <button>Sign In</button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport { SignIn };\n","import React, { Fragment, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { CreateAccount } from \"../CreateAccount/CreateAccount\";\nimport { SignIn } from \"../SignIn/SignIn\";\n\nimport \"./Login.css\";\n\nfunction Login() {\n  // State Definition\n  const [btnState, setBtnState] = useState(false);\n\n  // GUI BEHAIVOR\n  const signUpButton = () => {\n    setBtnState(true);\n  };\n\n  const signInButton = () => {\n    setBtnState(false);\n  };\n\n  // REACT HOOK FORM\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <Fragment>\n      <div\n        className={`container ${btnState ? \"right-panel-active\" : \"\"}`}\n        id=\"container\"\n      >\n        <CreateAccount\n          btnState={btnState}\n          setBtnState={setBtnState}\n          signUpButton={signUpButton}\n        />\n\n        <SignIn />\n\n        {/* ********************** SIGNIN FORM ****************************************** */}\n\n        <div className=\"overlay-container\">\n          <div className=\"overlay\">\n            <div className=\"overlay-panel overlay-left\">\n              <h1>Welcome Back!</h1>\n              <p>\n                To keep connected with us please loginLoginin with your personal\n                info\n              </p>\n              <button className=\"ghost\" id=\"signIn\" onClick={signInButton}>\n                Sign In\n              </button>\n            </div>\n            <div className=\"overlay-panel overlay-right\">\n              <h1>Hello, Friend!</h1>\n              <p>Enter your personal details and start journey with us</p>\n              <button className=\"ghost\" id=\"signUp\" onClick={signUpButton}>\n                Sign Up\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport { Login };\n","import React from \"react\";\nimport { Login } from \"../Login/Login\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}